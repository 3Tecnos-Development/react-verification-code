{
  "env": {
    "browser": true,
    "es2020": true,
    "jest": true
  },
  "extends": [
    "plugin:react/recommended",
    "airbnb",
    "prettier",
    "prettier/@typescript-eslint",
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 11, // Allows for the parsing of modern ECMAScript features
    "sourceType": "module", // Allows for the use of imports
    "ecmaFeatures": {
      "jsx": true // Allows for the parsing of JSX
    }
  },
  "settings": {
    "react": {
      "version": "detect" // Tells eslint-plugin-react to automatically detect the version of React to use
    },
    "import/resolver": {
      "typescript": {},
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx"],
        "typescript": {}
      }
    }
  },
  "plugins": [
    "react",
    "@typescript-eslint",
    "prettier",
    "eslint-plugin-import-helpers"
  ],
  "rules": {
    "react/jsx-filename-extension": [
      "error",
      {
        "extensions": [".tsx"]
      }
    ],
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "js": "never",
        "jsx": "never",
        "ts": "never",
        "tsx": "never"
      }
    ],
    "react/jsx-props-no-spreading": [
      "error",
      {
        "html": "ignore",
        "custom": "ignore",
        "exceptions": [""]
      }
    ],
    "indent": ["error", 2],
    "react/jsx-indent": ["error", 2],
    "react/destructuring-assignment": "off",
    "no-param-reassign": [2, { "props": false }],
    "@typescript-eslint/indent": ["error", 2],
    "quotes": [2, "double", { "avoidEscape": true }],
    "import/prefer-default-export": "off",
    "react/prop-types": "off",
    "import/no-dynamic-require": "off",
    "global-require": "off",
    "import/no-extraneous-dependencies": ["error", { "devDependencies": true }],
    "camelcase": "off",
    "@typescript-eslint/camelcase": ["off"],
    "no-unused-expressions": "off",
    "no-use-before-define": "off",
    "@typescript-eslint/no-unused-expressions": "error",
    "no-plusplus": "off",
    "@typescript-eslint/no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars-experimental": "error"
  }
}
